<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wtu.broadcast.openapi.dao.BTransmitterinfoMapper" >
  <resultMap id="BaseResultMap" type="cn.wtu.broadcast.openapi.model.BTransmitterinfo" >
    <id column="f_id" property="fId" jdbcType="INTEGER" />
    <result column="f_transmitter_id" property="fTransmitterId" jdbcType="VARCHAR" />
    <result column="f_transmitter_name" property="fTransmitterName" jdbcType="VARCHAR" />
    <result column="f_adapter_name" property="fAdapterName" jdbcType="VARCHAR" />
    <result column="f_region" property="fRegion" jdbcType="VARCHAR" />
    <result column="f_install_area" property="fInstallArea" jdbcType="VARCHAR" />
    <result column="f_physical_code" property="fPhysicalCode" jdbcType="VARCHAR" />
    <result column="f_resourcecode" property="fResourcecode" jdbcType="VARCHAR" />
    <result column="f_transmitter_state" property="fTransmitterState" jdbcType="INTEGER" />
    <result column="f_transmitter_output_fm" property="fTransmitterOutputFm" jdbcType="VARCHAR" />
    <result column="f_output_power" property="fOutputPower" jdbcType="VARCHAR" />
    <result column="f_equipment_temperature" property="fEquipmentTemperature" jdbcType="VARCHAR" />
    <result column="f_transmitter_voltage" property="fTransmitterVoltage" jdbcType="VARCHAR" />
    <result column="f_transmitter_current" property="fTransmitterCurrent" jdbcType="VARCHAR" />
    <result column="f_transmitter_reflection_power" property="fTransmitterReflectionPower" jdbcType="VARCHAR" />
    <result column="f_left_channel_modulation" property="fLeftChannelModulation" jdbcType="VARCHAR" />
    <result column="f_right_channel_modulation" property="fRightChannelModulation" jdbcType="VARCHAR" />
    <result column="f_harmonic_channel_modulation" property="fHarmonicChannelModulation" jdbcType="VARCHAR" />
    <result column="f_differential_channel_modulation" property="fDifferentialChannelModulation" jdbcType="VARCHAR" />
    <result column="f_rf_lock_state" property="fRfLockState" jdbcType="INTEGER" />
    <result column="pll_lock_state" property="pllLockState" jdbcType="INTEGER" />
    <result column="f_back_time" property="fBackTime" jdbcType="VARCHAR" />
    <result column="f_adapter_id" property="fAdapterId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    f_id, f_transmitter_id, f_transmitter_name, f_adapter_name, f_region, f_install_area, 
    f_physical_code, f_resourcecode, f_transmitter_state, f_transmitter_output_fm, f_output_power, 
    f_equipment_temperature, f_transmitter_voltage, f_transmitter_current, f_transmitter_reflection_power, 
    f_left_channel_modulation, f_right_channel_modulation, f_harmonic_channel_modulation, 
    f_differential_channel_modulation, f_rf_lock_state, pll_lock_state, f_back_time, 
    f_adapter_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.wtu.broadcast.openapi.model.BTransmitterinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_transmitterInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_transmitterInfo
    where f_id = #{fId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_transmitterInfo
    where f_id = #{fId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.wtu.broadcast.openapi.model.BTransmitterinfoExample" >
    delete from b_transmitterInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wtu.broadcast.openapi.model.BTransmitterinfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="fId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_transmitterInfo (f_transmitter_id, f_transmitter_name, 
      f_adapter_name, f_region, f_install_area, 
      f_physical_code, f_resourcecode, f_transmitter_state, 
      f_transmitter_output_fm, f_output_power, f_equipment_temperature, 
      f_transmitter_voltage, f_transmitter_current, 
      f_transmitter_reflection_power, f_left_channel_modulation, 
      f_right_channel_modulation, f_harmonic_channel_modulation, 
      f_differential_channel_modulation, f_rf_lock_state, 
      pll_lock_state, f_back_time, f_adapter_id
      )
    values (#{fTransmitterId,jdbcType=VARCHAR}, #{fTransmitterName,jdbcType=VARCHAR}, 
      #{fAdapterName,jdbcType=VARCHAR}, #{fRegion,jdbcType=VARCHAR}, #{fInstallArea,jdbcType=VARCHAR}, 
      #{fPhysicalCode,jdbcType=VARCHAR}, #{fResourcecode,jdbcType=VARCHAR}, #{fTransmitterState,jdbcType=INTEGER}, 
      #{fTransmitterOutputFm,jdbcType=VARCHAR}, #{fOutputPower,jdbcType=VARCHAR}, #{fEquipmentTemperature,jdbcType=VARCHAR}, 
      #{fTransmitterVoltage,jdbcType=VARCHAR}, #{fTransmitterCurrent,jdbcType=VARCHAR}, 
      #{fTransmitterReflectionPower,jdbcType=VARCHAR}, #{fLeftChannelModulation,jdbcType=VARCHAR}, 
      #{fRightChannelModulation,jdbcType=VARCHAR}, #{fHarmonicChannelModulation,jdbcType=VARCHAR}, 
      #{fDifferentialChannelModulation,jdbcType=VARCHAR}, #{fRfLockState,jdbcType=INTEGER}, 
      #{pllLockState,jdbcType=INTEGER}, #{fBackTime,jdbcType=VARCHAR}, #{fAdapterId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.wtu.broadcast.openapi.model.BTransmitterinfo" >
    <selectKey resultType="java.lang.Integer" keyProperty="fId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_transmitterInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fTransmitterId != null" >
        f_transmitter_id,
      </if>
      <if test="fTransmitterName != null" >
        f_transmitter_name,
      </if>
      <if test="fAdapterName != null" >
        f_adapter_name,
      </if>
      <if test="fRegion != null" >
        f_region,
      </if>
      <if test="fInstallArea != null" >
        f_install_area,
      </if>
      <if test="fPhysicalCode != null" >
        f_physical_code,
      </if>
      <if test="fResourcecode != null" >
        f_resourcecode,
      </if>
      <if test="fTransmitterState != null" >
        f_transmitter_state,
      </if>
      <if test="fTransmitterOutputFm != null" >
        f_transmitter_output_fm,
      </if>
      <if test="fOutputPower != null" >
        f_output_power,
      </if>
      <if test="fEquipmentTemperature != null" >
        f_equipment_temperature,
      </if>
      <if test="fTransmitterVoltage != null" >
        f_transmitter_voltage,
      </if>
      <if test="fTransmitterCurrent != null" >
        f_transmitter_current,
      </if>
      <if test="fTransmitterReflectionPower != null" >
        f_transmitter_reflection_power,
      </if>
      <if test="fLeftChannelModulation != null" >
        f_left_channel_modulation,
      </if>
      <if test="fRightChannelModulation != null" >
        f_right_channel_modulation,
      </if>
      <if test="fHarmonicChannelModulation != null" >
        f_harmonic_channel_modulation,
      </if>
      <if test="fDifferentialChannelModulation != null" >
        f_differential_channel_modulation,
      </if>
      <if test="fRfLockState != null" >
        f_rf_lock_state,
      </if>
      <if test="pllLockState != null" >
        pll_lock_state,
      </if>
      <if test="fBackTime != null" >
        f_back_time,
      </if>
      <if test="fAdapterId != null" >
        f_adapter_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fTransmitterId != null" >
        #{fTransmitterId,jdbcType=VARCHAR},
      </if>
      <if test="fTransmitterName != null" >
        #{fTransmitterName,jdbcType=VARCHAR},
      </if>
      <if test="fAdapterName != null" >
        #{fAdapterName,jdbcType=VARCHAR},
      </if>
      <if test="fRegion != null" >
        #{fRegion,jdbcType=VARCHAR},
      </if>
      <if test="fInstallArea != null" >
        #{fInstallArea,jdbcType=VARCHAR},
      </if>
      <if test="fPhysicalCode != null" >
        #{fPhysicalCode,jdbcType=VARCHAR},
      </if>
      <if test="fResourcecode != null" >
        #{fResourcecode,jdbcType=VARCHAR},
      </if>
      <if test="fTransmitterState != null" >
        #{fTransmitterState,jdbcType=INTEGER},
      </if>
      <if test="fTransmitterOutputFm != null" >
        #{fTransmitterOutputFm,jdbcType=VARCHAR},
      </if>
      <if test="fOutputPower != null" >
        #{fOutputPower,jdbcType=VARCHAR},
      </if>
      <if test="fEquipmentTemperature != null" >
        #{fEquipmentTemperature,jdbcType=VARCHAR},
      </if>
      <if test="fTransmitterVoltage != null" >
        #{fTransmitterVoltage,jdbcType=VARCHAR},
      </if>
      <if test="fTransmitterCurrent != null" >
        #{fTransmitterCurrent,jdbcType=VARCHAR},
      </if>
      <if test="fTransmitterReflectionPower != null" >
        #{fTransmitterReflectionPower,jdbcType=VARCHAR},
      </if>
      <if test="fLeftChannelModulation != null" >
        #{fLeftChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="fRightChannelModulation != null" >
        #{fRightChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="fHarmonicChannelModulation != null" >
        #{fHarmonicChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="fDifferentialChannelModulation != null" >
        #{fDifferentialChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="fRfLockState != null" >
        #{fRfLockState,jdbcType=INTEGER},
      </if>
      <if test="pllLockState != null" >
        #{pllLockState,jdbcType=INTEGER},
      </if>
      <if test="fBackTime != null" >
        #{fBackTime,jdbcType=VARCHAR},
      </if>
      <if test="fAdapterId != null" >
        #{fAdapterId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wtu.broadcast.openapi.model.BTransmitterinfoExample" resultType="java.lang.Integer" >
    select count(*) from b_transmitterInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update b_transmitterInfo
    <set >
      <if test="record.fId != null" >
        f_id = #{record.fId,jdbcType=INTEGER},
      </if>
      <if test="record.fTransmitterId != null" >
        f_transmitter_id = #{record.fTransmitterId,jdbcType=VARCHAR},
      </if>
      <if test="record.fTransmitterName != null" >
        f_transmitter_name = #{record.fTransmitterName,jdbcType=VARCHAR},
      </if>
      <if test="record.fAdapterName != null" >
        f_adapter_name = #{record.fAdapterName,jdbcType=VARCHAR},
      </if>
      <if test="record.fRegion != null" >
        f_region = #{record.fRegion,jdbcType=VARCHAR},
      </if>
      <if test="record.fInstallArea != null" >
        f_install_area = #{record.fInstallArea,jdbcType=VARCHAR},
      </if>
      <if test="record.fPhysicalCode != null" >
        f_physical_code = #{record.fPhysicalCode,jdbcType=VARCHAR},
      </if>
      <if test="record.fResourcecode != null" >
        f_resourcecode = #{record.fResourcecode,jdbcType=VARCHAR},
      </if>
      <if test="record.fTransmitterState != null" >
        f_transmitter_state = #{record.fTransmitterState,jdbcType=INTEGER},
      </if>
      <if test="record.fTransmitterOutputFm != null" >
        f_transmitter_output_fm = #{record.fTransmitterOutputFm,jdbcType=VARCHAR},
      </if>
      <if test="record.fOutputPower != null" >
        f_output_power = #{record.fOutputPower,jdbcType=VARCHAR},
      </if>
      <if test="record.fEquipmentTemperature != null" >
        f_equipment_temperature = #{record.fEquipmentTemperature,jdbcType=VARCHAR},
      </if>
      <if test="record.fTransmitterVoltage != null" >
        f_transmitter_voltage = #{record.fTransmitterVoltage,jdbcType=VARCHAR},
      </if>
      <if test="record.fTransmitterCurrent != null" >
        f_transmitter_current = #{record.fTransmitterCurrent,jdbcType=VARCHAR},
      </if>
      <if test="record.fTransmitterReflectionPower != null" >
        f_transmitter_reflection_power = #{record.fTransmitterReflectionPower,jdbcType=VARCHAR},
      </if>
      <if test="record.fLeftChannelModulation != null" >
        f_left_channel_modulation = #{record.fLeftChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="record.fRightChannelModulation != null" >
        f_right_channel_modulation = #{record.fRightChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="record.fHarmonicChannelModulation != null" >
        f_harmonic_channel_modulation = #{record.fHarmonicChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="record.fDifferentialChannelModulation != null" >
        f_differential_channel_modulation = #{record.fDifferentialChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="record.fRfLockState != null" >
        f_rf_lock_state = #{record.fRfLockState,jdbcType=INTEGER},
      </if>
      <if test="record.pllLockState != null" >
        pll_lock_state = #{record.pllLockState,jdbcType=INTEGER},
      </if>
      <if test="record.fBackTime != null" >
        f_back_time = #{record.fBackTime,jdbcType=VARCHAR},
      </if>
      <if test="record.fAdapterId != null" >
        f_adapter_id = #{record.fAdapterId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update b_transmitterInfo
    set f_id = #{record.fId,jdbcType=INTEGER},
      f_transmitter_id = #{record.fTransmitterId,jdbcType=VARCHAR},
      f_transmitter_name = #{record.fTransmitterName,jdbcType=VARCHAR},
      f_adapter_name = #{record.fAdapterName,jdbcType=VARCHAR},
      f_region = #{record.fRegion,jdbcType=VARCHAR},
      f_install_area = #{record.fInstallArea,jdbcType=VARCHAR},
      f_physical_code = #{record.fPhysicalCode,jdbcType=VARCHAR},
      f_resourcecode = #{record.fResourcecode,jdbcType=VARCHAR},
      f_transmitter_state = #{record.fTransmitterState,jdbcType=INTEGER},
      f_transmitter_output_fm = #{record.fTransmitterOutputFm,jdbcType=VARCHAR},
      f_output_power = #{record.fOutputPower,jdbcType=VARCHAR},
      f_equipment_temperature = #{record.fEquipmentTemperature,jdbcType=VARCHAR},
      f_transmitter_voltage = #{record.fTransmitterVoltage,jdbcType=VARCHAR},
      f_transmitter_current = #{record.fTransmitterCurrent,jdbcType=VARCHAR},
      f_transmitter_reflection_power = #{record.fTransmitterReflectionPower,jdbcType=VARCHAR},
      f_left_channel_modulation = #{record.fLeftChannelModulation,jdbcType=VARCHAR},
      f_right_channel_modulation = #{record.fRightChannelModulation,jdbcType=VARCHAR},
      f_harmonic_channel_modulation = #{record.fHarmonicChannelModulation,jdbcType=VARCHAR},
      f_differential_channel_modulation = #{record.fDifferentialChannelModulation,jdbcType=VARCHAR},
      f_rf_lock_state = #{record.fRfLockState,jdbcType=INTEGER},
      pll_lock_state = #{record.pllLockState,jdbcType=INTEGER},
      f_back_time = #{record.fBackTime,jdbcType=VARCHAR},
      f_adapter_id = #{record.fAdapterId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.wtu.broadcast.openapi.model.BTransmitterinfo" >
    update b_transmitterInfo
    <set >
      <if test="fTransmitterId != null" >
        f_transmitter_id = #{fTransmitterId,jdbcType=VARCHAR},
      </if>
      <if test="fTransmitterName != null" >
        f_transmitter_name = #{fTransmitterName,jdbcType=VARCHAR},
      </if>
      <if test="fAdapterName != null" >
        f_adapter_name = #{fAdapterName,jdbcType=VARCHAR},
      </if>
      <if test="fRegion != null" >
        f_region = #{fRegion,jdbcType=VARCHAR},
      </if>
      <if test="fInstallArea != null" >
        f_install_area = #{fInstallArea,jdbcType=VARCHAR},
      </if>
      <if test="fPhysicalCode != null" >
        f_physical_code = #{fPhysicalCode,jdbcType=VARCHAR},
      </if>
      <if test="fResourcecode != null" >
        f_resourcecode = #{fResourcecode,jdbcType=VARCHAR},
      </if>
      <if test="fTransmitterState != null" >
        f_transmitter_state = #{fTransmitterState,jdbcType=INTEGER},
      </if>
      <if test="fTransmitterOutputFm != null" >
        f_transmitter_output_fm = #{fTransmitterOutputFm,jdbcType=VARCHAR},
      </if>
      <if test="fOutputPower != null" >
        f_output_power = #{fOutputPower,jdbcType=VARCHAR},
      </if>
      <if test="fEquipmentTemperature != null" >
        f_equipment_temperature = #{fEquipmentTemperature,jdbcType=VARCHAR},
      </if>
      <if test="fTransmitterVoltage != null" >
        f_transmitter_voltage = #{fTransmitterVoltage,jdbcType=VARCHAR},
      </if>
      <if test="fTransmitterCurrent != null" >
        f_transmitter_current = #{fTransmitterCurrent,jdbcType=VARCHAR},
      </if>
      <if test="fTransmitterReflectionPower != null" >
        f_transmitter_reflection_power = #{fTransmitterReflectionPower,jdbcType=VARCHAR},
      </if>
      <if test="fLeftChannelModulation != null" >
        f_left_channel_modulation = #{fLeftChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="fRightChannelModulation != null" >
        f_right_channel_modulation = #{fRightChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="fHarmonicChannelModulation != null" >
        f_harmonic_channel_modulation = #{fHarmonicChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="fDifferentialChannelModulation != null" >
        f_differential_channel_modulation = #{fDifferentialChannelModulation,jdbcType=VARCHAR},
      </if>
      <if test="fRfLockState != null" >
        f_rf_lock_state = #{fRfLockState,jdbcType=INTEGER},
      </if>
      <if test="pllLockState != null" >
        pll_lock_state = #{pllLockState,jdbcType=INTEGER},
      </if>
      <if test="fBackTime != null" >
        f_back_time = #{fBackTime,jdbcType=VARCHAR},
      </if>
      <if test="fAdapterId != null" >
        f_adapter_id = #{fAdapterId,jdbcType=INTEGER},
      </if>
    </set>
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.wtu.broadcast.openapi.model.BTransmitterinfo" >
    update b_transmitterInfo
    set f_transmitter_id = #{fTransmitterId,jdbcType=VARCHAR},
      f_transmitter_name = #{fTransmitterName,jdbcType=VARCHAR},
      f_adapter_name = #{fAdapterName,jdbcType=VARCHAR},
      f_region = #{fRegion,jdbcType=VARCHAR},
      f_install_area = #{fInstallArea,jdbcType=VARCHAR},
      f_physical_code = #{fPhysicalCode,jdbcType=VARCHAR},
      f_resourcecode = #{fResourcecode,jdbcType=VARCHAR},
      f_transmitter_state = #{fTransmitterState,jdbcType=INTEGER},
      f_transmitter_output_fm = #{fTransmitterOutputFm,jdbcType=VARCHAR},
      f_output_power = #{fOutputPower,jdbcType=VARCHAR},
      f_equipment_temperature = #{fEquipmentTemperature,jdbcType=VARCHAR},
      f_transmitter_voltage = #{fTransmitterVoltage,jdbcType=VARCHAR},
      f_transmitter_current = #{fTransmitterCurrent,jdbcType=VARCHAR},
      f_transmitter_reflection_power = #{fTransmitterReflectionPower,jdbcType=VARCHAR},
      f_left_channel_modulation = #{fLeftChannelModulation,jdbcType=VARCHAR},
      f_right_channel_modulation = #{fRightChannelModulation,jdbcType=VARCHAR},
      f_harmonic_channel_modulation = #{fHarmonicChannelModulation,jdbcType=VARCHAR},
      f_differential_channel_modulation = #{fDifferentialChannelModulation,jdbcType=VARCHAR},
      f_rf_lock_state = #{fRfLockState,jdbcType=INTEGER},
      pll_lock_state = #{pllLockState,jdbcType=INTEGER},
      f_back_time = #{fBackTime,jdbcType=VARCHAR},
      f_adapter_id = #{fAdapterId,jdbcType=INTEGER}
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
</mapper>