<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wtu.broadcast.openapi.dao.BDeviceReturnAudioMapper" >
  <resultMap id="BaseResultMap" type="cn.wtu.broadcast.openapi.model.BDeviceReturnAudio" >
    <id column="f_id" property="fId" jdbcType="INTEGER" />
    <result column="f_audio_name" property="fAudioName" jdbcType="VARCHAR" />
    <result column="f_device_id" property="fDeviceId" jdbcType="INTEGER" />
    <result column="f_audio_url" property="fAudioUrl" jdbcType="VARCHAR" />
    <result column="f_use_flag" property="fUseFlag" jdbcType="BIT" />
    <result column="f_broadcast_id" property="fBroadcastId" jdbcType="INTEGER" />
    <result column="f_is_timing_broadcast" property="fIsTimingBroadcast" jdbcType="BIT" />
    <result column="f_create_time" property="fCreateTime" jdbcType="TIMESTAMP" />
    <result column="f_end_time" property="fEndTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.wtu.broadcast.openapi.model.BDeviceReturnAudio" extends="BaseResultMap" >
    <result column="f_audio_byte" property="fAudioByte" jdbcType="LONGVARBINARY" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    f_id, f_audio_name, f_device_id, f_audio_url, f_use_flag, f_broadcast_id, f_is_timing_broadcast, 
    f_create_time, f_end_time
  </sql>
  <sql id="Blob_Column_List" >
    f_audio_byte
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="cn.wtu.broadcast.openapi.model.BDeviceReturnAudioExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_device_return_audio
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.wtu.broadcast.openapi.model.BDeviceReturnAudioExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_device_return_audio
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_device_return_audio
    where f_id = #{fId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_device_return_audio
    where f_id = #{fId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.wtu.broadcast.openapi.model.BDeviceReturnAudioExample" >
    delete from b_device_return_audio
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wtu.broadcast.openapi.model.BDeviceReturnAudio" >
    <selectKey resultType="java.lang.Integer" keyProperty="fId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_device_return_audio (f_audio_name, f_device_id, f_audio_url, 
      f_use_flag, f_broadcast_id, f_is_timing_broadcast, 
      f_create_time, f_end_time, f_audio_byte
      )
    values (#{fAudioName,jdbcType=VARCHAR}, #{fDeviceId,jdbcType=INTEGER}, #{fAudioUrl,jdbcType=VARCHAR}, 
      #{fUseFlag,jdbcType=BIT}, #{fBroadcastId,jdbcType=INTEGER}, #{fIsTimingBroadcast,jdbcType=BIT}, 
      #{fCreateTime,jdbcType=TIMESTAMP}, #{fEndTime,jdbcType=TIMESTAMP}, #{fAudioByte,jdbcType=LONGVARBINARY}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.wtu.broadcast.openapi.model.BDeviceReturnAudio" >
    <selectKey resultType="java.lang.Integer" keyProperty="fId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_device_return_audio
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fAudioName != null" >
        f_audio_name,
      </if>
      <if test="fDeviceId != null" >
        f_device_id,
      </if>
      <if test="fAudioUrl != null" >
        f_audio_url,
      </if>
      <if test="fUseFlag != null" >
        f_use_flag,
      </if>
      <if test="fBroadcastId != null" >
        f_broadcast_id,
      </if>
      <if test="fIsTimingBroadcast != null" >
        f_is_timing_broadcast,
      </if>
      <if test="fCreateTime != null" >
        f_create_time,
      </if>
      <if test="fEndTime != null" >
        f_end_time,
      </if>
      <if test="fAudioByte != null" >
        f_audio_byte,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fAudioName != null" >
        #{fAudioName,jdbcType=VARCHAR},
      </if>
      <if test="fDeviceId != null" >
        #{fDeviceId,jdbcType=INTEGER},
      </if>
      <if test="fAudioUrl != null" >
        #{fAudioUrl,jdbcType=VARCHAR},
      </if>
      <if test="fUseFlag != null" >
        #{fUseFlag,jdbcType=BIT},
      </if>
      <if test="fBroadcastId != null" >
        #{fBroadcastId,jdbcType=INTEGER},
      </if>
      <if test="fIsTimingBroadcast != null" >
        #{fIsTimingBroadcast,jdbcType=BIT},
      </if>
      <if test="fCreateTime != null" >
        #{fCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fEndTime != null" >
        #{fEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fAudioByte != null" >
        #{fAudioByte,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wtu.broadcast.openapi.model.BDeviceReturnAudioExample" resultType="java.lang.Integer" >
    select count(*) from b_device_return_audio
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update b_device_return_audio
    <set >
      <if test="record.fId != null" >
        f_id = #{record.fId,jdbcType=INTEGER},
      </if>
      <if test="record.fAudioName != null" >
        f_audio_name = #{record.fAudioName,jdbcType=VARCHAR},
      </if>
      <if test="record.fDeviceId != null" >
        f_device_id = #{record.fDeviceId,jdbcType=INTEGER},
      </if>
      <if test="record.fAudioUrl != null" >
        f_audio_url = #{record.fAudioUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.fUseFlag != null" >
        f_use_flag = #{record.fUseFlag,jdbcType=BIT},
      </if>
      <if test="record.fBroadcastId != null" >
        f_broadcast_id = #{record.fBroadcastId,jdbcType=INTEGER},
      </if>
      <if test="record.fIsTimingBroadcast != null" >
        f_is_timing_broadcast = #{record.fIsTimingBroadcast,jdbcType=BIT},
      </if>
      <if test="record.fCreateTime != null" >
        f_create_time = #{record.fCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fEndTime != null" >
        f_end_time = #{record.fEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fAudioByte != null" >
        f_audio_byte = #{record.fAudioByte,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update b_device_return_audio
    set f_id = #{record.fId,jdbcType=INTEGER},
      f_audio_name = #{record.fAudioName,jdbcType=VARCHAR},
      f_device_id = #{record.fDeviceId,jdbcType=INTEGER},
      f_audio_url = #{record.fAudioUrl,jdbcType=VARCHAR},
      f_use_flag = #{record.fUseFlag,jdbcType=BIT},
      f_broadcast_id = #{record.fBroadcastId,jdbcType=INTEGER},
      f_is_timing_broadcast = #{record.fIsTimingBroadcast,jdbcType=BIT},
      f_create_time = #{record.fCreateTime,jdbcType=TIMESTAMP},
      f_end_time = #{record.fEndTime,jdbcType=TIMESTAMP},
      f_audio_byte = #{record.fAudioByte,jdbcType=LONGVARBINARY}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update b_device_return_audio
    set f_id = #{record.fId,jdbcType=INTEGER},
      f_audio_name = #{record.fAudioName,jdbcType=VARCHAR},
      f_device_id = #{record.fDeviceId,jdbcType=INTEGER},
      f_audio_url = #{record.fAudioUrl,jdbcType=VARCHAR},
      f_use_flag = #{record.fUseFlag,jdbcType=BIT},
      f_broadcast_id = #{record.fBroadcastId,jdbcType=INTEGER},
      f_is_timing_broadcast = #{record.fIsTimingBroadcast,jdbcType=BIT},
      f_create_time = #{record.fCreateTime,jdbcType=TIMESTAMP},
      f_end_time = #{record.fEndTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.wtu.broadcast.openapi.model.BDeviceReturnAudio" >
    update b_device_return_audio
    <set >
      <if test="fAudioName != null" >
        f_audio_name = #{fAudioName,jdbcType=VARCHAR},
      </if>
      <if test="fDeviceId != null" >
        f_device_id = #{fDeviceId,jdbcType=INTEGER},
      </if>
      <if test="fAudioUrl != null" >
        f_audio_url = #{fAudioUrl,jdbcType=VARCHAR},
      </if>
      <if test="fUseFlag != null" >
        f_use_flag = #{fUseFlag,jdbcType=BIT},
      </if>
      <if test="fBroadcastId != null" >
        f_broadcast_id = #{fBroadcastId,jdbcType=INTEGER},
      </if>
      <if test="fIsTimingBroadcast != null" >
        f_is_timing_broadcast = #{fIsTimingBroadcast,jdbcType=BIT},
      </if>
      <if test="fCreateTime != null" >
        f_create_time = #{fCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fEndTime != null" >
        f_end_time = #{fEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fAudioByte != null" >
        f_audio_byte = #{fAudioByte,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.wtu.broadcast.openapi.model.BDeviceReturnAudio" >
    update b_device_return_audio
    set f_audio_name = #{fAudioName,jdbcType=VARCHAR},
      f_device_id = #{fDeviceId,jdbcType=INTEGER},
      f_audio_url = #{fAudioUrl,jdbcType=VARCHAR},
      f_use_flag = #{fUseFlag,jdbcType=BIT},
      f_broadcast_id = #{fBroadcastId,jdbcType=INTEGER},
      f_is_timing_broadcast = #{fIsTimingBroadcast,jdbcType=BIT},
      f_create_time = #{fCreateTime,jdbcType=TIMESTAMP},
      f_end_time = #{fEndTime,jdbcType=TIMESTAMP},
      f_audio_byte = #{fAudioByte,jdbcType=LONGVARBINARY}
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.wtu.broadcast.openapi.model.BDeviceReturnAudio" >
    update b_device_return_audio
    set f_audio_name = #{fAudioName,jdbcType=VARCHAR},
      f_device_id = #{fDeviceId,jdbcType=INTEGER},
      f_audio_url = #{fAudioUrl,jdbcType=VARCHAR},
      f_use_flag = #{fUseFlag,jdbcType=BIT},
      f_broadcast_id = #{fBroadcastId,jdbcType=INTEGER},
      f_is_timing_broadcast = #{fIsTimingBroadcast,jdbcType=BIT},
      f_create_time = #{fCreateTime,jdbcType=TIMESTAMP},
      f_end_time = #{fEndTime,jdbcType=TIMESTAMP}
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
</mapper>