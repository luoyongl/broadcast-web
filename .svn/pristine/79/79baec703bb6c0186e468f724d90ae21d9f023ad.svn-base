<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wtu.broadcast.openapi.dao.BReviewMapper" >
  <resultMap id="BaseResultMap" type="cn.wtu.broadcast.openapi.model.BReview" >
    <id column="f_id" property="fId" jdbcType="INTEGER" />
    <result column="f_big_classification" property="fBigClassification" jdbcType="TINYINT" />
    <result column="f_review_type" property="fReviewType" jdbcType="TINYINT" />
    <result column="f_review_object_id" property="fReviewObjectId" jdbcType="INTEGER" />
    <result column="f_review_result" property="fReviewResult" jdbcType="TINYINT" />
    <result column="f_review_time" property="fReviewTime" jdbcType="TIMESTAMP" />
    <result column="f_reviewer" property="fReviewer" jdbcType="INTEGER" />
    <result column="f_remark" property="fRemark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    f_id, f_big_classification, f_review_type, f_review_object_id, f_review_result, f_review_time, 
    f_reviewer, f_remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.wtu.broadcast.openapi.model.BReviewExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from b_review
    where f_id = #{fId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_review
    where f_id = #{fId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.wtu.broadcast.openapi.model.BReviewExample" >
    delete from b_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.wtu.broadcast.openapi.model.BReview" >
    <selectKey resultType="java.lang.Integer" keyProperty="fId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_review (f_big_classification, f_review_type, 
      f_review_object_id, f_review_result, f_review_time, 
      f_reviewer, f_remark)
    values (#{fBigClassification,jdbcType=TINYINT}, #{fReviewType,jdbcType=TINYINT}, 
      #{fReviewObjectId,jdbcType=INTEGER}, #{fReviewResult,jdbcType=TINYINT}, #{fReviewTime,jdbcType=TIMESTAMP}, 
      #{fReviewer,jdbcType=INTEGER}, #{fRemark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.wtu.broadcast.openapi.model.BReview" >
    <selectKey resultType="java.lang.Integer" keyProperty="fId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into b_review
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fBigClassification != null" >
        f_big_classification,
      </if>
      <if test="fReviewType != null" >
        f_review_type,
      </if>
      <if test="fReviewObjectId != null" >
        f_review_object_id,
      </if>
      <if test="fReviewResult != null" >
        f_review_result,
      </if>
      <if test="fReviewTime != null" >
        f_review_time,
      </if>
      <if test="fReviewer != null" >
        f_reviewer,
      </if>
      <if test="fRemark != null" >
        f_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fBigClassification != null" >
        #{fBigClassification,jdbcType=TINYINT},
      </if>
      <if test="fReviewType != null" >
        #{fReviewType,jdbcType=TINYINT},
      </if>
      <if test="fReviewObjectId != null" >
        #{fReviewObjectId,jdbcType=INTEGER},
      </if>
      <if test="fReviewResult != null" >
        #{fReviewResult,jdbcType=TINYINT},
      </if>
      <if test="fReviewTime != null" >
        #{fReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fReviewer != null" >
        #{fReviewer,jdbcType=INTEGER},
      </if>
      <if test="fRemark != null" >
        #{fRemark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.wtu.broadcast.openapi.model.BReviewExample" resultType="java.lang.Integer" >
    select count(*) from b_review
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update b_review
    <set >
      <if test="record.fId != null" >
        f_id = #{record.fId,jdbcType=INTEGER},
      </if>
      <if test="record.fBigClassification != null" >
        f_big_classification = #{record.fBigClassification,jdbcType=TINYINT},
      </if>
      <if test="record.fReviewType != null" >
        f_review_type = #{record.fReviewType,jdbcType=TINYINT},
      </if>
      <if test="record.fReviewObjectId != null" >
        f_review_object_id = #{record.fReviewObjectId,jdbcType=INTEGER},
      </if>
      <if test="record.fReviewResult != null" >
        f_review_result = #{record.fReviewResult,jdbcType=TINYINT},
      </if>
      <if test="record.fReviewTime != null" >
        f_review_time = #{record.fReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fReviewer != null" >
        f_reviewer = #{record.fReviewer,jdbcType=INTEGER},
      </if>
      <if test="record.fRemark != null" >
        f_remark = #{record.fRemark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update b_review
    set f_id = #{record.fId,jdbcType=INTEGER},
      f_big_classification = #{record.fBigClassification,jdbcType=TINYINT},
      f_review_type = #{record.fReviewType,jdbcType=TINYINT},
      f_review_object_id = #{record.fReviewObjectId,jdbcType=INTEGER},
      f_review_result = #{record.fReviewResult,jdbcType=TINYINT},
      f_review_time = #{record.fReviewTime,jdbcType=TIMESTAMP},
      f_reviewer = #{record.fReviewer,jdbcType=INTEGER},
      f_remark = #{record.fRemark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.wtu.broadcast.openapi.model.BReview" >
    update b_review
    <set >
      <if test="fBigClassification != null" >
        f_big_classification = #{fBigClassification,jdbcType=TINYINT},
      </if>
      <if test="fReviewType != null" >
        f_review_type = #{fReviewType,jdbcType=TINYINT},
      </if>
      <if test="fReviewObjectId != null" >
        f_review_object_id = #{fReviewObjectId,jdbcType=INTEGER},
      </if>
      <if test="fReviewResult != null" >
        f_review_result = #{fReviewResult,jdbcType=TINYINT},
      </if>
      <if test="fReviewTime != null" >
        f_review_time = #{fReviewTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fReviewer != null" >
        f_reviewer = #{fReviewer,jdbcType=INTEGER},
      </if>
      <if test="fRemark != null" >
        f_remark = #{fRemark,jdbcType=VARCHAR},
      </if>
    </set>
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.wtu.broadcast.openapi.model.BReview" >
    update b_review
    set f_big_classification = #{fBigClassification,jdbcType=TINYINT},
      f_review_type = #{fReviewType,jdbcType=TINYINT},
      f_review_object_id = #{fReviewObjectId,jdbcType=INTEGER},
      f_review_result = #{fReviewResult,jdbcType=TINYINT},
      f_review_time = #{fReviewTime,jdbcType=TIMESTAMP},
      f_reviewer = #{fReviewer,jdbcType=INTEGER},
      f_remark = #{fRemark,jdbcType=VARCHAR}
    where f_id = #{fId,jdbcType=INTEGER}
  </update>
</mapper>